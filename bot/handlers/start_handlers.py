# bot/handlers/start_handlers.py
from aiogram import Router, F
from aiogram.filters import Command, CommandStart
from aiogram.types import Message
from aiogram.fsm.context import FSMContext
from database.requests import DatabaseRequests
from bot.keyboards import get_start_keyboard, get_chats_keyboard
from states import UserStates, ChannelStates
from services.channel_service import ChannelService

router = Router()

@router.message(CommandStart())
async def cmd_start(message: Message, state: FSMContext, db: DatabaseRequests):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start –∏ —Ç–µ–∫—Å—Ç–æ–≤–æ–π –∫–æ–º–∞–Ω–¥—ã '–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é'."""
    user_exists = await db.check_user_exists(message.from_user.id)
    if not user_exists:
        await db.add_user(message.from_user.id)

    await message.answer(
        "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ **–ü—Ä–æ–¥–≤–∏–Ω—É—Ç—ã–π –ù–æ–≤–æ—Å—Ç–Ω–æ–π –ë–æ—Ç**! üëã\n\n" # –ò–∑–º–µ–Ω–µ–Ω–æ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ
        "–Ø –ø–æ–º–æ–≥—É –≤–∞–º –ø–æ–ª—É—á–∞—Ç—å —Å–≤–æ–¥–∫–∏ –Ω–æ–≤–æ—Å—Ç–µ–π –∏–∑ Telegram-–∫–∞–Ω–∞–ª–æ–≤.\n\n"
        "–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:", # –ë–æ–ª–µ–µ —è–≤–Ω–æ–µ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ –∫ –¥–µ–π—Å—Ç–≤–∏—é
        reply_markup=get_start_keyboard()
    , parse_mode="Markdown") # –í–∫–ª—é—á–∞–µ–º Markdown

    await state.clear()

@router.message(F.text.lower().in_({"–≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", "–º–µ–Ω—é"}))
@router.message(Command("menu_kb"))
async def show_main_menu_kb(message: Message, state: FSMContext, db: DatabaseRequests):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –ø–æ–∫–∞–∑–∞ –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é (—Ç–µ–∫—Å—Ç–æ–≤—ã–µ –∫–æ–º–∞–Ω–¥—ã –∏ –∫–Ω–æ–ø–∫–∞ /start)."""
    await cmd_start(message, state, db)

@router.message(F.text.lower().in_({"–ø–æ–∫–∞–∑–∞—Ç—å —Å–ø–∏—Å–æ–∫ —á–∞—Ç–æ–≤", "—Å–ø–∏—Å–æ–∫ —á–∞—Ç–æ–≤", "–º–æ–∏ —á–∞—Ç—ã", "—á–∞—Ç—ã"}))
@router.message(Command("show_chats"))
async def show_chats_list(message: Message, state: FSMContext, db: DatabaseRequests):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ '–ü–æ–∫–∞–∑–∞—Ç—å —Å–ø–∏—Å–æ–∫ —á–∞—Ç–æ–≤' –∏ —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö –∫–æ–º–∞–Ω–¥."""
    service = ChannelService(db=db)
    
    # –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ –∫–∞–Ω–∞–ª–æ–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    chats = await service.get_user_channels(message.from_user.id)
    
    if not chats:
        await message.answer("–£ –≤–∞—Å –ø–æ–∫–∞ –Ω–µ—Ç –¥–æ–±–∞–≤–ª–µ–Ω–Ω—ã—Ö –∫–∞–Ω–∞–ª–æ–≤.")
        return
    
    # –°–æ–∑–¥–∞–µ–º –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –∫–∞–Ω–∞–ª–∞–º–∏
    keyboard = await get_chats_keyboard(chats)
    await message.answer("–í—ã–±–µ—Ä–∏—Ç–µ –∫–∞–Ω–∞–ª –∏–∑ —Å–ø–∏—Å–∫–∞:", reply_markup=keyboard)
    
    await state.set_state(UserStates.WAITING_FOR_CHAT_SELECTION)
